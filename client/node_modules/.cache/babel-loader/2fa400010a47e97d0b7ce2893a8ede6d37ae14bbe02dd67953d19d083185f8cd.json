{"ast":null,"code":"var _jsxFileName = \"/Users/banovsha/Desktop/ChatApp/client/src/components/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"message...\",\n        onChange: e => setCurrentMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"fDkx3BIBKR9cKtC6DnMvHgOXiCo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_ref","_s","socket","username","room","currentMessage","setCurrentMessage","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/banovsha/Desktop/ChatApp/client/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Chat = ({socket, username, room}) => {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const sendMessage = async () => {\n        if (currentMessage !== \"\") {\n            const messageData = {\n                room: room,\n                author: username,\n                message: currentMessage,\n                time: new Date(Date.now()).getHours() + \":\"  + new Date(Date.now()).getMinutes()\n            }\n            await socket.emit(\"send_message\", messageData)\n        }\n    }\n\n  return (\n    <div>\n        <div className='chat-header'>\n            <p>Live chat</p>\n        </div>\n        <div className='chat-body'></div>\n        <div className='chat-footer'>\n            <input type=\"text\" placeholder='message...' onChange={(e) => setCurrentMessage(e.target.value)} />\n            <button onClick={sendMessage}>&#9658;</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Chat"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,MAAM;IAAEC,QAAQ;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAClC,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIF,cAAc,KAAK,EAAE,EAAE;MACvB,MAAMG,WAAW,GAAG;QAChBJ,IAAI,EAAEA,IAAI;QACVK,MAAM,EAAEN,QAAQ;QAChBO,OAAO,EAAEL,cAAc;QACvBM,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAI,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;MACnF,CAAC;MACD,MAAMb,MAAM,CAACc,IAAI,CAAC,cAAc,EAAER,WAAW,CAAC;IAClD;EACJ,CAAC;EAEH,oBACEV,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAD,QAAA,eACxBnB,OAAA;QAAAmB,QAAA,EAAG;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACNxB,OAAA;MAAKoB,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjCxB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAD,QAAA,gBACxBnB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,YAAY;QAACC,QAAQ,EAAGC,CAAC,IAAKpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGxB,OAAA;QAAQ+B,OAAO,EAAEtB,WAAY;QAAAU,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAArB,EAAA,CA1BKF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA4BV,eAAeA,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}